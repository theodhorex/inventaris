class AntreanPrioritasDiurutkan:
    def __init__(self):
        self.antrian = []

    def is_empty(self):
        """Cek apakah antrian kosong."""
        return len(self.antrian) == 0

    def len(self):
        """Mengembalikan panjang antrian."""
        return len(self.antrian)

    def hapus(self):
        """Menghapus data paling depan dari antrian."""
        if not self.is_empty():
            return self.antrian.pop(0)  # Menghapus elemen pertama
        else:
            raise Exception("Antrian kosong")

    def intip(self):
        """Mengambil data paling depan tanpa menghapusnya."""
        if not self.is_empty():
            return self.antrian[0]  # Mengembalikan elemen pertama
        else:
            raise Exception("Antrian kosong")

    def tambahkan(self, item, prioritas):
        """Menambah isi antrian dengan prioritas tertentu."""
        self.antrian.append((item, prioritas))
        self.antrian = self.quick_sort(self.antrian)

    def quick_sort(self, antrian):
        """Mengurutkan antrian menggunakan algoritma Quick Sort dari terbesar ke terkecil."""
        if len(antrian) <= 1:
            return antrian
        else:
            pivot = antrian[len(antrian) // 2][1]
            kiri = [x for x in antrian if x[1] > pivot]  # Lebih besar dari pivot
            tengah = [x for x in antrian if x[1] == pivot]  # Sama dengan pivot
            kanan = [x for x in antrian if x[1] < pivot]  # Lebih kecil dari pivot
            return kiri + tengah + kanan  # Kembali dengan urutan dari terbesar ke terkecil

    def cetak_semua(self):
        """Mengembalikan isi dari antrian urut dari yang terbesar."""
        return [(item, prioritas) for item, prioritas in self.antrian]

# Kasus Uji
if __name__ == "__main__":
    myQueue = AntreanPrioritasDiurutkan()

    myQueue.tambahkan('Raksasa', 2)
    myQueue.tambahkan('Kezia', 4)
    print(myQueue.cetak_semua())  # Expected: [('Kezia', 4), ('Raksasa', 2)]
    print(myQueue.intip())         # Expected: ('Kezia', 4)
    print()

    myQueue.tambahkan('Glen', 8)
    myQueue.tambahkan('Christo', 1)
    print(myQueue.cetak_semua())  # Expected: [('Glen', 8), ('Kezia', 4), ('Raksasa', 2), ('Christo', 1)]
    print(myQueue.intip())         # Expected: ('Glen', 8)
    print()

    print("========HAPUS========")
    myQueue.hapus()                # Menghapus 'Glen'
    print(myQueue.cetak_semua())   # Expected: [('Kezia', 4), ('Raksasa', 2), ('Christo', 1)]
    print()

    myQueue.hapus()                # Menghapus 'Kezia'
    print(myQueue.cetak_semua())   # Expected: [('Raksasa', 2), ('Christo', 1)]
    print()

    myQueue.hapus()                # Menghapus 'Raksasa'
    print(myQueue.cetak_semua())   # Expected: [('Christo', 1)]
    print()

    myQueue.tambahkan('Saya', 7)
    print(myQueue.cetak_semua())   # Expected: [('Saya', 7), ('Christo', 1)]
