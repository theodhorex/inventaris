from flask import Flask, redirect, render_template, request, url_for
import sqlite3

app = Flask(__name__)

@app.route('/success/<name>', methods=['GET'])
def success(name):
    return f'Proses data user : {name} berhasil'

@app.route('/userlist')
def userList():
    users = getAllUser()
    return render_template('userlist.html', title='Daftar User', listuser=users)

@app.route("/login", methods=['POST'])
def login():
    username = request.form.get('username')
    password = request.form.get('password')

    # Connect to the database
    connection = sqlite3.connect("user.db")
    cursor = connection.cursor()

    # Check if user exists
    cursor.execute("SELECT realname FROM user WHERE username = ? AND password = ?", (username, password))
    user = cursor.fetchone()

    connection.close()

    if user:
        return redirect(url_for('success', name=user[0]))
    else:
        return "Login gagal. Username atau password salah."

@app.route("/registeruser", methods=['POST'])
def registeruser():
    realname = request.form.get('realname')
    pob = request.form.get('pob')
    username = request.form.get('username')
    password = request.form.get('password')

    # Connect to the database
    connection = sqlite3.connect("user.db")
    cursor = connection.cursor()

    # Insert new user
    try:
        cursor.execute("INSERT INTO user (realname, pob, username, password) VALUES (?, ?, ?, ?)",
                       (realname, pob, username, password))
        connection.commit()
        connection.close()
        return redirect(url_for('success', name=realname))
    except Exception as e:
        connection.close()
        return f"Registrasi gagal: {e}"

def getAllUser():
    # Open database connection
    connection = sqlite3.connect("user.db")
    cursor = connection.cursor()

    # Execute the query
    cursor.execute("SELECT realname, pob, username, password FROM user;")

    # Convert it into dictionary
    desc = cursor.description
    column_names = [col[0] for col in desc]
    data = [dict(zip(column_names, row)) for row in cursor.fetchall()]

    # Close the connection
    connection.close()
    return data

if __name__ == '__main__':
    app.run()
