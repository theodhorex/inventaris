class PriorityQueue:
    def __init__(self):
        self.data = []

    def is_empty(self):
        return len(self.data) == 0

    def enqueue(self, prioritas, data):
        self.data.append((prioritas, data))
        self.data.sort(reverse=True)

    def dequeue(self):
        if self.is_empty():
            return None
        return self.data.pop(0)

def print_pasien(pq: PriorityQueue):
    for i, (prioritas, pasien) in enumerate(pq.data, start=1):
        status = "Sudah meninggal" if prioritas == 3 else "Merah" if prioritas == 2 else "Kuning"
        print(f"{i}. {pasien}, status: {status}")

def get_patient_status():
    respirasi = int(input("Kecepatan Respirasi per menit: "))
    if respirasi == 0:
        return 3  # Hitam
    elif respirasi > 30 or respirasi < 10:
        return 2  # Merah
    else:
        denyut_nadi = input("Denyut lemah/tidak terasa (y/n): ")
        if denyut_nadi == 'y':
            return 2  # Merah
        perintah = input("Apakah bisa diperintah? (y/n): ")
        return 1 if perintah == 'y' else 2  # Kuning atau Merah

if __name__ == "__main__":
    pq = PriorityQueue()
    
    for i in range(3):
        print(f"Masukkan data pasien ke-{i + 1}")
        nama = input("Nama pasien: ")
        status = get_patient_status()
        pq.enqueue(status, nama)
    
    print("\n=== HASIL DATA PASIEN ===")
    print_pasien(pq)
